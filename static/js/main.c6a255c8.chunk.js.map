{"version":3,"sources":["logo.svg","components/userTile/index.jsx","components/custompopup/index.jsx","components/homepage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserTile","props","state","loaded","sendInfo","bind","fetch","then","res","json","result","console","log","setState","members","id","member","this","find","item","openPopup","Fragment","map","className","onClick","src","alt","real_name","icon","faMapMarkerAlt","tz","React","Component","Custompopup","startDate","endDate","closePopup","document","getElementById","classList","remove","faTimes","dateFormat","selected","onChange","date","searchFilter","Homepage","popupOnClick","search","getMonthNumber","selectedMember","table","querySelector","noData","querySelectorAll","tableBody","row","activity_periods","record","start_time","end_time","style","display","innerHTML","add","sentMonth","month","toLowerCase","itemSplitStartDate","split","itemStartDate","Date","App","useState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6a255c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport './style.scss';\r\nclass UserTile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             loaded: false\r\n        }\r\n        this.sendInfo = this.sendInfo.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"/FullThrottleBuild/json/test.json\").then(\r\n            res => res.json()\r\n        ).then((result)=>{\r\n            console.log(result)\r\n          this.setState({members: result.members, loaded: true}, ()=> {console.log(this.state)});\r\n        })\r\n    }\r\n\r\n    sendInfo(id){\r\n        let member = this.state.members.find((item)=> (item.id== id));\r\n        this.props.openPopup(member);\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loaded ? (\r\n            this.state.members.map((item)=>{\r\n                return (<div className=\"listChild\" onClick={()=>{this.sendInfo(item.id)}}>\r\n                  <div className=\"imageContainer\">\r\n                    <img src=\"/FullThrottleBuild/assets/userPP.png\" alt=\"User Thumbnail\" />\r\n                  </div>\r\n                  <div className=\"userInfo\"><p className=\"userName\">{item.real_name}</p>\r\n                  <p className=\"userLoc\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {item.tz}</p></div>\r\n                </div>)\r\n            })):(<p>Loading...</p>)}\r\n                </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserTile;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport './style.scss';\r\n\r\nclass Custompopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: \"\",\r\n            endDate: \"\",\r\n            member: {}\r\n        }\r\n        this.closePopup = this.closePopup.bind(this);\r\n    }\r\n\r\n    closePopup() {\r\n        this.setState({\r\n            startDate: \"\",\r\n            endDate: \"\"})\r\n        document.getElementById(\"customPopup\").classList.remove(\"show\")\r\n        // document.querySelectorAll(\".customPopup\")[0].classList.remove(\"show\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"customPopup\" id=\"customPopup\">\r\n                <div className=\"popupContainer\">\r\n                    <div className=\"exitBtn\" onClick={() => { this.closePopup() }}><i><FontAwesomeIcon icon={faTimes} /></i></div>\r\n                    <div className=\"popMessageBox\">\r\n                        <h4 className=\"title\">Filter by Date :</h4>\r\n                        <div className=\"dateSelction\">\r\n                            <div className=\"startDate dateChild\">\r\n                                <label>From date :</label> <DatePicker dateFormat=\"dd/MM/yy\" selected={this.state.startDate} onChange={date => this.setState({ startDate: date })} />\r\n                            </div>\r\n                            <div className=\"endDate dateChild\">\r\n                                <label>To date : </label><DatePicker dateFormat=\"dd/MM/yy\" selected={this.state.endDate} onChange={date => this.setState({ endDate: date })} />\r\n                            </div>\r\n                            <div className=\"dateChild\"><button onClick={()=>{this.props.searchFilter(this.state.startDate,this.state.endDate)}} className=\"searchButton\">Filter</button></div>\r\n                        </div>\r\n                        <div className=\"messageContent\" id=\"message\">\r\n                            <p id=\"noData\">No Data Found</p>\r\n                            <table id=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Start Date\r\n                                    </th>\r\n                                        <th>\r\n                                            End Date\r\n                                    </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Date</td>\r\n                                        <td>Date</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Date</td>\r\n                                        <td>Date</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Date</td>\r\n                                        <td>Date</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Date</td>\r\n                                        <td>Date</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <button className=\"popupOkBtn\" onClick={() => { this.closePopup() }}>ok</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Custompopup;","import React, { Component } from 'react';\r\nimport UserTile from '../userTile/index';\r\nimport Custompopup from '../custompopup/index';\r\n\r\nimport './style.scss';\r\n\r\n class Homepage extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n              member : {}\r\n         }\r\n         this.popupOnClick = this.popupOnClick.bind(this);\r\n         this.search = this.search.bind(this);\r\n         this.getMonthNumber = this.getMonthNumber.bind(this);\r\n     }\r\n\r\n     popupOnClick (selectedMember) {\r\n      let table = document.querySelector(\"#table\");\r\n      let noData = document.querySelectorAll(\"#noData\");\r\n       this.setState({member: selectedMember}, ()=>{\r\n        let tableBody = document.querySelector(\"#table tbody\");\r\n       let row = \"\";\r\n       this.state.member.activity_periods.map(record => {\r\n           row = row + `<tr><td>${record.start_time}</td><td>${record.end_time}</td></tr>`;\r\n       })\r\n       table.style.display = 'table';\r\n       noData[0].style.display = 'none';\r\n       tableBody.innerHTML = row;\r\n       document.getElementById(\"customPopup\").classList.add(\"show\")\r\n       });\r\n     }\r\n\r\n     \r\n    getMonthNumber(sentMonth) {\r\n      let month = \"\";\r\n      switch (sentMonth.toLowerCase()) {\r\n          case \"jan\": {\r\n              month = \"00\";\r\n              break;\r\n          }\r\n          case \"feb\": {\r\n              month = \"01\";\r\n              break;\r\n          }\r\n          case \"mar\": {\r\n              month = \"02\";\r\n              break;\r\n          }\r\n          case \"apr\": {\r\n              month = \"03\";\r\n              break;\r\n          }\r\n          case \"may\": {\r\n              month = \"04\";\r\n              break;\r\n          }\r\n          case \"jun\": {\r\n              month = \"05\";\r\n              break;\r\n          }\r\n          case \"jul\": {\r\n              month = \"06\";\r\n              break;\r\n          }\r\n          case \"aug\": {\r\n              month = \"07\";\r\n              break;\r\n          }\r\n          case \"sep\": {\r\n              month = \"08\";\r\n              break;\r\n          }\r\n          case \"oct\": {\r\n              month = \"09\";\r\n              break;\r\n          }\r\n          case \"nov\": {\r\n              month = \"10\";\r\n              break;\r\n          }\r\n          case \"dec\": {\r\n              month = '11';\r\n              break;\r\n          }\r\n      }\r\n      return month;\r\n  }\r\n\r\n    search(startDate,endDate) {\r\n\r\n      let table = document.querySelector(\"#table\");\r\n      let tableBody = document.querySelector(\"#table tbody\");\r\n      let noData = document.querySelectorAll(\"#noData\");\r\n      let row = \"\";\r\n\r\n      this.state.member.activity_periods.map(item => {\r\n          let itemSplitStartDate = item.start_time.split(\" \");\r\n          let itemStartDate = new Date(itemSplitStartDate[2], this.getMonthNumber(itemSplitStartDate[0]), itemSplitStartDate[1]);\r\n          \r\n          if ((startDate <= itemStartDate) && (itemStartDate <= endDate)) {\r\n              row = row + `<tr><td>${item.start_time}</td><td>${item.end_time}</td></tr>`;\r\n          }\r\n      })\r\n      if(row == \"\" ) {\r\n        noData[0].style.display = 'block';\r\n        table.style.display = 'none';\r\n      }else {\r\n        table.style.display = 'table';\r\n        noData[0].style.display = 'none';\r\n        tableBody.innerHTML = row;\r\n      }\r\n  }\r\n     \r\n    render() {\r\n        return (\r\n            <div className=\"pageContainer\">\r\n              <section className=\"usrList\">\r\n                <UserTile openPopup={this.popupOnClick} />\r\n              </section>\r\n              <Custompopup  searchFilter={this.search} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import logo from './logo.svg';\nimport './App.scss';\nimport Homepage from './components/homepage/index';\nimport {useState , useEffect} from 'react';\n\nfunction App() {\n  const [state, setState] = useState({});\n  // useEffect(() => {\n  //     fetch(\"/json/test.json\").then(\n  //         res => res.json()\n  //     ).then((result)=>{\n  //       setState(result);\n  //     })\n  // })\n  return (\n    <div className=\"App\">\n      <header>Header</header>\n      <Homepage/>\n      <footer>Footer</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}